services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app # Mount your local code to the container
    depends_on:
      - redis
    environment:
      - PYTHONPATH=/app
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
  celery_transcription:
    platform: linux/amd64
    build: .
    command: celery -A app.transcription_processor worker --loglevel=info --concurrency 1 -Q transcription_queue
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app # Mount your local code to the container
      - ./downloads:/app/downloads
      - ./models:/app/models
    depends_on:
      - redis
  celery_download:
    build: .
    command: celery -A app.download_processor worker --loglevel=info --concurrency 1 -Q download_queue
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app # Mount your local code to the container
      - ./downloads:/app/downloads
    depends_on:
      - redis
  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower
    ports:
      - "5556:5555"
    depends_on:
      - redis
  frontend:
    image: node:18-alpine
    working_dir: /app
    command: sh -c "corepack enable && yarn install && yarn dev"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
